# ==============================================================================
# 原始语言包，文档结构（自动生成，勿改）:
# 1. 自动处理 bin | lib 目录 sh 文件
# 2. 解析函数 string | info | exiterr | error | success | warning
# 3. comment：■=file name; ◆=function name; ●=call_type@line_no
# 4. key=hash code for string (djb2 or MD5)
# 5. value=original string in programs
# ==============================================================================

# ■=bin/cmd_help.sh
# ◆=show_help_info
# ●=exiterr@215
DVh_Ho=Usage: show_help_info [command]\n \
        Available commands: find, ls   
# ●=exiterr@220
AfYlCL=Error: Command '$cmd' not found.
# ◆=run_command
# ●=exiterr@260
B2mmYr=未找到命令 '$cmd_name'
# ●=exiterr@263
DHeim3=未找到命令 '$cmd_name' 的元数据

# ■=bin/deb/init_debian.sh
# ◆=install_docker
# ●=info@36
B4UUwh=在 $DISTRO 上安装 Docker 与 Docker Compose...

# ■=bin/i18n.sh
# ◆=load_lang_files
# ●=info@32
AeQi7H=查找可用语言...
# ●=info@41
DzUa6j=找到语言: $lang_name ($lang_file)
# ◆=resolve_lang_files
# ●=string@69
BcI858=模式参数错误 {0}
# ●=string@71
Aw82xn={0} 语言文件已存在
# ●=string@74
A7XPUC={0} 语言文件不存在
# ◆=add_lang_files
# ●=string@133
BGAgyU=# {0} 语言包，文档结构：\n\
# 1. 自动处理 bin | lib 目录 sh 文件\n\
# 2. 解析函数 string | info | exiterr | error | success | warning\n\
# 3. key=distinct hash code + position + order\n\
# 4. value=localized string
# ●=info@143
Aw3y8l={0} 语言文件已创建
# ◆=do_del_lang_files
# ●=string@159
Aw30Tu={0} 语言文件已删除
# ◆=del_lang_files
# ●=string@171
B0BXr_=确定要删除 {0} 语言文件吗?
# ●=string@172
C7-6zR=操作已取消，文件未删除
# ◆=get_lang_files
# ●=string@193
CEjzNC=确定要新增 {0} 语言文件吗?
# ●=exiterr@206
DPIGII=请先添加语言文件
# ◆=get_shell_files
# ●=warning@220
DDag72=警告: 脚本文件 '{0}' 不存在
# ●=exiterr@230
D42Oj-=没有找到任何 shell 脚本文件
# ◆=upd_lang_files
# ●=info@254
DiwOgw=开始更新语言文件
# ●=info@275
A1bqoY=语言文件更新完成
# ◆=i18n_main
# ●=exiterr@400
D6sy7g=请输入语言参数，如 --lang={0}

# ■=bin/init_main.sh
# ◆=initial_global
# ●=exiterr@59
C_wKj8=Unsupported distribution: $ID ($PRETTY_NAME)
# ●=exiterr@63
C9Ii-I=Unable to detect Linux distribution, cannot proceed
# ◆=check_user_sudo
# ●=exiterr@104
AxwYcd=无法安装 sudo，请使用 root 账号执行本脚本(su -)，或手动安装 sudo
# ●=exiterr@106
C1aPQb=用户非 sudo 组，请使用 root 账号执行本脚本(su -)，或手动加入 sudo
# ◆=initial_env
# ●=exiterr@127
Cp5p-B=请手动修改软件源后再运行
# ●=string@133
BbrFHw=检测到 CD-ROM 作为软件源，是否重新选择软件源？
# ●=string@136
DH-Jyo=是否重新选择软件源？
# ●=info@156
AHkPR9=[1/1] 系统升级开始...
# ●=success@161
Dt4LeC=[1/2] 系统升级完成...
# ●=info@164
A7CkJF=[1/3] 检查系统环境...
# ◆=config_sshd
# ●=info@187
CbkyTT=sshd 未安装，正在安装...
# ●=exiterr@188
CF_oEw=安装 sshd 失败
# ●=string@193
AwmRaO=输入新的SSH端口 (当前: {0}) : 
# ●=info@196
B2i01m=已设置SSH端口: {0}
# ●=info@198
BAf12Q=无效端口，保持默认: $curr_ssh_port
# ●=info@205
AV251C=已允许 root 登录
# ●=info@206
CMJB1s=已禁止 root 登录
# ●=info@210
A58FQX=SSH 配置已应用
# ◆=configure_ip
# ●=info@222
AGC_1W=NetworkManager 正在运行
# ●=info@225
BqbrMF=ifupdown 正在运行
# ●=info@228
AHezXa=wicked 正在运行
# ●=info@231
BfE9I1=network-scripts 正在运行
# ●=info@234
C3EbKb=systemd-networkd 正在运行
# ●=exiterr@237
DS2AXc=未知网络管理器，无法配置静态IP
# ◆=install_docker
# ●=info@243
B4UUwh=在 $DISTRO 上安装 Docker 与 Docker Compose...

# ■=lib/bash_utils.sh
# ◆=confirm_action
# ●=string@42
Ai7UlQ=operation is cancelled
# ◆=file_backup_sj
# ●=exiterr@182
A-g65z=未指定需要备份的文件
# ●=warning@193
D7A4Jy=警告：未找到匹配 '$pattern' 的文件
# ●=warning@205
BDbdpK=备份文件 $backup_file 已存在，跳过
# ●=info@212
CPJo9U=已创建备份: $src_file -> $backup_file
# ●=error@215
CNpapj=错误：无法创建备份文件 $backup_file
# ●=exiterr@223
DvpZ6Q=重要文件无法备份
# ●=info@225
ACMBwV=备份完成：成功 $backup_count 个，跳过 $skip_count 个，失败 $error_count 个

# ■=lib/cmd_handler.sh
# ◆=install_base_pkg
# ●=info@20
DvEyZZ=自动安装 '$lnx_cmd' ...
# ●=exiterr@35
BnlNCU=$lnx_cmd 安装失败，请手动安装，日志: {0} [{1}]
# ●=success@37
CUzI33=$lnx_cmd 安装成功，日志: {0} [{1}]
# ◆=clean_pkg_mgr
# ●=info@46
BNHOyr=清理 {0} 缓存...
# ●=exiterr@54
CMai8S=清理缓存失败
# ◆=update_pkg_mgr
# ●=info@61
BDkuDB=更新镜像源列表...
# ●=exiterr@68
Cdk87Z=更新失败，镜像可能不可用
# ◆=upgrade_pkg_mgr
# ●=info@75
D-4Jrc=升级已安装的软件包...
# ●=exiterr@82
B3YUrw=升级软件包失败
# ◆=remove_pkg_mgr
# ●=info@89
CLrdOC=删除不再需要的依赖包...
# ●=exiterr@96
DFKvlL=删除依赖包失败

# ■=lib/docker.sh
# ◆=show_notice
# ●=string@22
A-Na7B=多选组件：格式如 1 3 4；再次选择相同项目可取消选择，回车结束
# ◆=infra_setup
# ●=info@154
Cb5gv1=⏎ 选择完成，正在保存配置到 .env 文件...

# ■=lib/init_base_func.sh
# ◆=select_mirror
# ●=exiterr@34
ASaya7=错误：镜像列表文件不存在
# ●=exiterr@50
A8MmpO=错误：未找到有效镜像URL
# ●=success@53
BYJFgs=可用的镜像站：
# ●=string@57
BcmiKG=请选择镜像编号 [{0}](0=不做选择): 
# ●=success@69
Bc1qWs=已切换到: {0}
# ●=string@73
B_kcRO=输入{0}错误!{1}

# ■=lib/json_handler.sh
# ◆=fetch_options
# ●=exiterr@40
BzOdCD=JSON format error

# ■=lib/msg_handler.sh
# ◆=msg_parse_param
# ●=error]:@432
B8f7ce=>&2

# ■=lib/network.sh
# ◆=need_fix_ip
# ●=info@24
DhWnL_=${ENV_NETWORK[
# ●=info@39
CFrSgR=用户选择不修改网络配置
# ◆=count_down
# ●=info@91
BjHfVo=${duration}秒后修改网络配置：$IP_ADDR (接口 $IFACE)，请准备好重连。按 Ctrl+C 取消
# ◆=config_nmcli
# ●=exiterr@106
B3mgNd=错误：nmcli 未安装或不可用，请先安装 NetworkManager 命令行工具
# ●=exiterr@132
CiQhsW=连接激活失败，请检查网络并尝试重新连接
# ◆=config_default
# ●=exiterr@214
CcDg5_=错误：systemd-networkd 未安装或不可用
# ●=exiterr@222
AH9rvM=重启 systemd-networkd 失败，请检查配置文件后再试

# ■=lib/python_install.sh
# ◆=detect_system
# ●=exiterr@46
A-fT9S=不支持的架构: $arch
# ◆=get_python_url
# ●=exiterr@65
B-i4aq=不支持的系统类型: $system_type
# ◆=smart_wget
# ●=string@165
BPBoao=大小: $human_size ↑$size_change | 平均: $avg_speed_text
# ●=string@173
ByQOLg=[$spinner] $(date '+%H:%M:%S') | 运行时间: $elapsed_formatted | $cached_stats
# ◆=install_py_standalone
# ●=info@214
AatL4G=下载 Python {} standalone...
# ●=info@218
BA8WYI=安装 Python 到 {}...
# ●=exiterr@221
CSK2Yu=解压安装失败
# ●=exiterr@226
AMrdLk=Python 安装失败: $loc_bin 不存在或不可执行
# ●=info@228
DkUaTG=Python $PY_VERSION 安装完成！
# ◆=create_py_venv
# ●=warning@240
BqObTk=跳过虚拟环境创建
# ●=info@247
AK7qPE=创建虚拟环境 $VENV_DIR...
# ●=success@252
ClGJXq=虚拟环境创建成功！
# ●=exiterr@255
AXm5nN=创建虚拟环境失败
# ◆=main
# ●=info@295
DNdsm8=Python $PY_VERSION Standalone 自动安装脚本
