# en 语言包，文档结构：
# 1. 自动处理 bin | lib 目录 py 文件
# 2. 解析函数 string | info | exiterr | error | success | warning
# 3. key=distinct hash code + position + order
# 4. value=localized string

# ■=bin/cmd_help.sh
# ◆=show_help_info
DVh_Ho=Usage: show_help_info [command]\n \
        Available commands: find, ls   
AfYlCL=Error: Command '$cmd' not found.
# ◆=run_command
B2mmYr=未找到命令 '$cmd_name'
DHeim3=未找到命令 '$cmd_name' 的元数据

# ■=bin/deb/init_debian.sh
# ◆=install_docker
B4UUwh=在 $DISTRO 上安装 Docker 与 Docker Compose...

# ■=bin/i18n.sh
# ◆=load_lang_files
AeQi7H=查找可用语言...
DzUa6j=找到语言: $lang_name ($lang_file)
# ◆=resolve_lang_files
BcI858=模式参数错误 {0}
Aw82xn={0} 语言文件已存在
A7XPUC={0} 语言文件不存在
# ◆=add_lang_files
BGAgyU=# {0} 语言包，文档结构：\n\
# 1. 自动处理 bin | lib 目录 sh 文件\n\
# 2. 解析函数 string | info | exiterr | error | success | warning\n\
# 3. key=distinct hash code + position + order\n\
# 4. value=localized string
Aw3y8l={0} 语言文件已创建
# ◆=do_del_lang_files
Aw30Tu={0} 语言文件已删除
# ◆=del_lang_files
B0BXr_=确定要删除 {0} 语言文件吗?
C7-6zR=操作已取消，文件未删除
# ◆=get_lang_files
CEjzNC=确定要新增 {0} 语言文件吗?
DPIGII=请先添加语言文件
# ◆=get_shell_files
DDag72=警告: 脚本文件 '{0}' 不存在
D42Oj-=没有找到任何 shell 脚本文件
# ◆=upd_lang_files
DiwOgw=开始更新语言文件
A1bqoY=语言文件更新完成
# ◆=i18n_main
D6sy7g=请输入语言参数，如 --lang={0}

# ■=bin/init_main.sh
# ◆=initial_global
C_wKj8=Unsupported distribution: $ID ($PRETTY_NAME)
C9Ii-I=Unable to detect Linux distribution, cannot proceed
# ◆=check_user_sudo
AxwYcd=无法安装 sudo，请使用 root 账号执行本脚本(su -)，或手动安装 sudo
C1aPQb=用户非 sudo 组，请使用 root 账号执行本脚本(su -)，或手动加入 sudo
# ◆=initial_env
DHzikX=安装所需软件包...
# ◆=config_sshd
CbkyTT=sshd 未安装，正在安装...
AwmRaO=输入新的SSH端口 (当前: {0}) :
B2i01m=已设置SSH端口: {0}
BAf12Q=无效端口，保持默认: $curr_ssh_port
AV251C=已允许 root 登录
CMJB1s=已禁止 root 登录
A58FQX=SSH 配置已应用
# ◆=configure_ip
AGC_1W=NetworkManager 正在运行
BqbrMF=ifupdown 正在运行
AHezXa=wicked 正在运行
BfE9I1=network-scripts 正在运行
C3EbKb=systemd-networkd 正在运行
DS2AXc=未知网络管理器，无法配置静态IP
# ◆=install_docker
B4UUwh=在 $DISTRO 上安装 Docker 与 Docker Compose...

# ■=lib/bash_utils.sh
# ◆=confirm_action
Ai7UlQ=operation is cancelled
# ◆=file_backup_sj
A-g65z=未指定需要备份的文件
D7A4Jy=警告：未找到匹配 '$pattern' 的文件
BDbdpK=备份文件 $backup_file 已存在，跳过
CPJo9U=已创建备份: $src_file -> $backup_file
CNpapj=错误：无法创建备份文件 $backup_file
DvpZ6Q=重要文件无法备份
ACMBwV=备份完成：成功 $backup_count 个，跳过 $skip_count 个，失败 $error_count 个

# ■=lib/cmd_handler.sh
# ◆=install_base_pkg
DvEyZZ=自动安装 '$lnx_cmd' ...
BnlNCU=$lnx_cmd 安装失败，请手动安装，日志: {0} [{1}]
CUzI33=$lnx_cmd 安装成功，日志: {0} [{1}]

# ■=lib/docker.sh
# ◆=show_notice
A-Na7B=多选组件：格式如 1 3 4；再次选择相同项目可取消选择，回车结束
# ◆=infra_setup
Cb5gv1=⏎ 选择完成，正在保存配置到 .env 文件...

# ■=lib/json_handler.sh
# ◆=fetch_options
BzOdCD=JSON format error

# ■=lib/msg_handler.sh
# ◆=msg_parse_param
B8f7ce=>&2

# ■=lib/network.sh
# ◆=need_fix_ip
DhWnL_=${ENV_NETWORK[
CFrSgR=用户选择不修改网络配置
# ◆=count_down
BjHfVo=${duration}秒后修改网络配置：$IP_ADDR (接口 $IFACE)，请准备好重连。按 Ctrl+C 取消
# ◆=config_nmcli
B3mgNd=错误：nmcli 未安装或不可用，请先安装 NetworkManager 命令行工具
CiQhsW=连接激活失败，请检查网络并尝试重新连接
# ◆=config_default
CcDg5_=错误：systemd-networkd 未安装或不可用
AH9rvM=重启 systemd-networkd 失败，请检查配置文件后再试

# ■=lib/python_install.sh
# ◆=detect_system
A-fT9S=不支持的架构: $arch
# ◆=get_python_url
B-i4aq=不支持的系统类型: $system_type
# ◆=on_exit
Alj5Ma=检测到中断，正在终止后台下载进程（PID=$oid...）
# ◆=smart_wget
BPBoao=Size: $human_size ↑$size_change | Average: $avg_speed_text
ByQOLg=[$spinner] $(date '+%H:%M:%S') | Runtime: $elapsed_formatted | $cached_stats
# ◆=install_py_standalone
AatL4G=Download Python {} standalone...
BA8WYI=安装 Python 到 {}...
CSK2Yu=解压安装失败
AMrdLk=Python 安装失败: $loc_bin 不存在或不可执行
DkUaTG=Python $PY_VERSION 安装完成！
# ◆=create_py_venv
BqObTk=跳过虚拟环境创建
AK7qPE=创建虚拟环境 $VENV_DIR...
ClGJXq=虚拟环境创建成功！
AXm5nN=创建虚拟环境失败
# ◆=main
DNdsm8=Python $PY_VERSION Standalone 自动安装脚本
